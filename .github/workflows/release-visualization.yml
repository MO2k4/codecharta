name: Release - Visualization

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  VERSION: "0.0.0"

jobs:
  promote_and_release:
    if: |
      github.event.pull_request.merged == true && 
      contains(github.event.pull_request.labels.*.name, 'release') &&
      startsWith(github.event.pull_request.head.ref, 'release/vis-')
    name: Promote and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Extract version from branch name
      - name: Set version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "VERSION=${BRANCH_NAME#release/vis-}" >> $GITHUB_ENV

      # Create and push tag
      - name: Create tag
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "vis-${{ env.VERSION }}"
          git push origin "vis-${{ env.VERSION }}"

      # Build just for release artifacts
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wine-stable zip

      - name: Build visualization
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        working-directory: ./visualization
        run: |
          npm ci
          npm run build
          npm run package

      # Promote from staging
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull and retag Docker image
        run: |
          docker pull codecharta/codecharta-visualization:staging
          docker tag codecharta/codecharta-visualization:staging codecharta/codecharta-visualization:latest
          docker tag codecharta/codecharta-visualization:staging codecharta/codecharta-visualization:${{ env.VERSION }}
          docker push codecharta/codecharta-visualization:latest
          docker push codecharta/codecharta-visualization:${{ env.VERSION }}

      - name: Promote npm package
        working-directory: ./visualization
        run: |
          # Get the latest staging version
          STAGING_VERSION=$(npm view codecharta-visualization@staging version)
          
          # Download the staging package
          npm pack codecharta-visualization@staging
          
          # Update version and publish as latest
          npm version ${{ env.VERSION }} --no-git-tag-version
          npm publish codecharta-visualization-${STAGING_VERSION}.tgz --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Create GitHub Release
      - name: Add Changelog Entries to Release
        uses: rasmus-saks/release-a-changelog-action@v1.2.0
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          path: 'visualization/CHANGELOG.md'
          title-template: 'Visualization release {version}'
          tag-template: 'vis-{version}'

      # Upload release assets
      - name: Upload Release Files
        uses: alexellis/upload-assets@0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["visualization/dist/packages/*.zip"]'

      # Deploy to production GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.6.9
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          branch: gh-pages
          folder: visualization/dist/webpack
          clean: true
